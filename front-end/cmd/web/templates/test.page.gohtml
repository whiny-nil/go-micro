{{template "base" .}}

{{define "content" }}
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-5">Test microservices</h1>
                <hr>
                <a id="brokerBtn" class="btn btn-outline-secondary" href="javascript:void(0);">Test Broker</a>
                <a id="authBrokerBtn" class="btn btn-outline-secondary" href="javascript:void(0);">Test Auth</a>
                <a id="logBrokerBtn" class="btn btn-outline-secondary" href="javascript:void(0);">Test Log</a>
                <a id="logGrpcBtn" class="btn btn-outline-secondary" href="javascript:void(0);">Test gRPC Log</a>
                <a id="mailBrokerBtn" class="btn btn-outline-secondary" href="javascript:void(0);">Test Mail</a>

                <div id="output" class="mt-5" style="outline: 1px solid silver; padding: 2em;">
                    <span class="text-muted">Output shows here...</span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <h4 class="mt-5">Sent</h4>
                <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="payload"><span class="text-muted">Nothing sent yet...</span></pre>
                </div>
            </div>
            <div class="col">
                <h4 class="mt-5">Received</h4>
                <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="received"><span class="text-muted">Nothing received yet...</span></pre>
                </div>
            </div>
        </div>
    </div>
{{end}}

{{define "js"}}
    <script>
        let brokerURL = {{.BrokerURL}};

        let brokerBtn = document.getElementById("brokerBtn");
        let authBrokerBtn = document.getElementById("authBrokerBtn");
        let logBrokerBtn = document.getElementById("logBrokerBtn");
        let logGrpcBtn = document.getElementById("logGrpcBtn");
        let mailBrokerBtn = document.getElementById("mailBrokerBtn");

        let output = document.getElementById("output");
        let sent = document.getElementById("payload");
        let received = document.getElementById("received");

        let showPayload = (payload) => sent.innerHTML = JSON.stringify(payload, undefined, 4);
        let makeJSONBody = (payload) => {
            showPayload(payload);

            const headers = new Headers();
            headers.append("Content-Type", "application/json");

            return {
                method: "POST",
                body: JSON.stringify(payload),
                headers: headers,
            };
        };
        let parseJSON = (response) => response.json()
        let showResponse = (data) => {
            received.innerHTML = JSON.stringify(data, undefined, 4);
            if (data.error) {
                output.innerHTML += `<br><strong>Error:</strong> ${data.message}`;
            } else {
                output.innerHTML += `<br><strong>Response from broker service</strong>: ${data.message}`;
            };
        };
        let showError = (error) => output.innerHTML += `<br><strong>Caught Error:</strong> ${error}`;
        let handleWithBroker = (payload) => {
            const body = makeJSONBody(payload);
            
            fetch(`${brokerURL}/handle`, body)
                .then(parseJSON)
                .then(showResponse)
                .catch(showError)
        };

        brokerBtn.addEventListener("click", function() {
            const payload = {};
            showPayload(payload);

            const body = {
                method: "POST",
            }
            fetch(brokerURL, body)
                .then(parseJSON)
                .then(showResponse)
                .catch(showError)
        });

        logGrpcBtn.addEventListener("click", function() {
            const payload = {
                action: "log",
                log: {
                    name: "event",
                    data: "Some kind of data, via gRPC",
                }
            }
            showPayload(payload);

            const body = makeJSONBody(payload);
            fetch(`${brokerURL}/log-grpc`, body)
                .then(parseJSON)
                .then(showResponse)
                .catch(showError)
        
        });

        logBrokerBtn.addEventListener("click", function() {
            const payload = {
                action: "log",
                log: {
                    name: "event",
                    data: "Some kind of data",
                }
            }
            handleWithBroker(payload);
        });

        authBrokerBtn.addEventListener("click", function() {
            const payload = {
                action: "auth",
                auth: {
                    email: "admin@example.com",
                    password: "verysecret",
                }
            }
            handleWithBroker(payload);
        });

        mailBrokerBtn.addEventListener("click", function() {
            const payload = {
                action: "mail",
                mail: {
                    from: "marc@example.com",
                    to: "world@example.com",
                    subject: "Hello!",
                    message: "What's up?  How are things?",
                }
            }
            handleWithBroker(payload);
        });
    </script>
{{end}}
